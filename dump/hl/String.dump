@:directlyUsed @:used @:coreApi
class String {

	public function new[Function:(string : String) -> Void]
		[Arg:String] [Local string(1):String]
		[Block:Int]
			[Binop:hl.Bytes]
				[Field:hl.Bytes]
					[Const:String] this
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				=
				[Field:hl.Bytes]
					[Local string(1):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
			[Binop:Int]
				[Field:Int]
					[Const:String] this
					[FInstance:Int]
						String
						length:Int
				=
				[Field:Int]
					[Local string(1):String:String]
					[FInstance:Int]
						String
						length:Int

	var bytes:hl.Bytes;

	public var length(default,null):Int;

	public function toUpperCase[Function:() -> String]
		[Block:Dynamic]
			[Var b(10):hl.Bytes]
				[Call:hl.Bytes]
					[Field:(this : hl.Bytes, bytePos : Int, size : Int) -> hl.Bytes]
						[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
						[FStatic:(this : hl.Bytes, bytePos : Int, size : Int) -> hl.Bytes]
							hl._Bytes.Bytes_Impl_
							ucs2Upper:(this : hl.Bytes, bytePos : Int, size : Int) -> hl.Bytes
					[Field:hl.Bytes]
						[Const:String] this
						[FInstance:hl.Bytes]
							String
							bytes:hl.Bytes
					[Const:Int] 0
					[Field:Int]
						[Const:String] this
						[FInstance:Int]
							String
							length:Int
			[Var length(11):Int]
				[Field:Int]
					[Const:String] this
					[FInstance:Int]
						String
						length:Int
			[Var s(12):String]
				[Call:String]
					[Ident:Class<String> -> Unknown<1>] $new
					[TypeExpr String:Class<String>]
			[Binop:hl.Bytes]
				[Field:hl.Bytes]
					[Local s(12):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				=
				[Local b(10):hl.Bytes:hl.Bytes]
			[Binop:Int]
				[Field:Int]
					[Local s(12):String:String]
					[FInstance:Int]
						String
						length:Int
				=
				[Local length(11):Int:Int]
			[Return:Dynamic] [Local s(12):String:String]

	public function toLowerCase[Function:() -> String]
		[Block:Dynamic]
			[Var b(18):hl.Bytes]
				[Call:hl.Bytes]
					[Field:(this : hl.Bytes, bytePos : Int, size : Int) -> hl.Bytes]
						[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
						[FStatic:(this : hl.Bytes, bytePos : Int, size : Int) -> hl.Bytes]
							hl._Bytes.Bytes_Impl_
							ucs2Lower:(this : hl.Bytes, bytePos : Int, size : Int) -> hl.Bytes
					[Field:hl.Bytes]
						[Const:String] this
						[FInstance:hl.Bytes]
							String
							bytes:hl.Bytes
					[Const:Int] 0
					[Field:Int]
						[Const:String] this
						[FInstance:Int]
							String
							length:Int
			[Var length(19):Int]
				[Field:Int]
					[Const:String] this
					[FInstance:Int]
						String
						length:Int
			[Var s(20):String]
				[Call:String]
					[Ident:Class<String> -> Unknown<1>] $new
					[TypeExpr String:Class<String>]
			[Binop:hl.Bytes]
				[Field:hl.Bytes]
					[Local s(20):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				=
				[Local b(18):hl.Bytes:hl.Bytes]
			[Binop:Int]
				[Field:Int]
					[Local s(20):String:String]
					[FInstance:Int]
						String
						length:Int
				=
				[Local length(19):Int:Int]
			[Return:Dynamic] [Local s(20):String:String]

	public function charAt[Function:(index : Int) -> String]
		[Arg:Int] [Local index(21):Int]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Cast:UInt] [Local index(21):Int:Int]
						>=
						[Cast:UInt]
							[Field:Int]
								[Const:String] this
								[FInstance:Int]
									String
									length:Int
				[Then:Dynamic] [Return:Dynamic] [Const:String] ""
			[Var this1(28):hl.Bytes]
				[Call:hl.Bytes]
					[Field:(size : Int) -> hl.Bytes]
						[TypeExpr hl._Bytes.Bytes_Impl_:Abstract<hl.Bytes>]
						[FStatic:(size : Int) -> hl.Bytes]
							hl._Bytes.Bytes_Impl_
							alloc:(size : Int) -> hl.Bytes
					[Const:Int] 4
			[Var b(29):hl.Bytes] [Local this1(28):hl.Bytes:hl.Bytes]
			[Block:Void]
				[Var this1(37):hl.Bytes]
					[Field:hl.Bytes]
						[Const:String] this
						[FInstance:hl.Bytes]
							String
							bytes:hl.Bytes
				[Var v(43):Int]
					[Call:Int]
						[Ident:(hl.Bytes, Int) -> Unknown<7>] $bgetui16
						[Local this1(37):hl.Bytes:hl.Bytes]
						[Binop:Int]
							[Local index(21):Int:Int]
							<<
							[Const:Int] 1
				[Call:Unknown<9>]
					[Ident:(hl.Bytes, Int, Int) -> Unknown<8>] $bsetui16
					[Local b(29):hl.Bytes:hl.Bytes]
					[Const:Int] 0
					[Local v(43):Int:Int]
			[Call:Unknown<9>]
				[Ident:(hl.Bytes, Int, Int) -> Unknown<8>] $bsetui16
				[Local b(29):hl.Bytes:hl.Bytes]
				[Const:Int] 2
				[Const:Int] 0
			[Var s(53):String]
				[Call:String]
					[Ident:Class<String> -> Unknown<1>] $new
					[TypeExpr String:Class<String>]
			[Binop:hl.Bytes]
				[Field:hl.Bytes]
					[Local s(53):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				=
				[Local b(29):hl.Bytes:hl.Bytes]
			[Binop:Int]
				[Field:Int]
					[Local s(53):String:String]
					[FInstance:Int]
						String
						length:Int
				=
				[Const:Int] 1
			[Return:Dynamic] [Local s(53):String:String]

	public function charCodeAt[Function:(index : Int) -> Null<Int>]
		[Arg:Int] [Local index(233):Int]
		[Block:Dynamic]
			[Var idx(234):UInt] [Local index(233):Int:Int]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local idx(234):UInt:UInt]
						>=
						[Cast:UInt]
							[Field:Int]
								[Const:String] this
								[FInstance:Int]
									String
									length:Int
				[Then:Dynamic] [Return:Dynamic] [Const:Null<Int>] null
			[Var this1(237):hl.Bytes]
				[Field:hl.Bytes]
					[Const:String] this
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
			[Return:Dynamic]
				[Call:Int]
					[Ident:(hl.Bytes, Int) -> Unknown<7>] $bgetui16
					[Local this1(237):hl.Bytes:hl.Bytes]
					[Binop:Int]
						[Local index(233):Int:Int]
						<<
						[Const:Int] 1

	inline function findChar[Function:(start : Int, len : Int, src : hl.Bytes, srcLen : Int) -> Int]
		[Arg:Int] [Local start(239):Int]
		[Arg:Int] [Local len(240):Int]
		[Arg:hl.Bytes] [Local src(241):hl.Bytes]
		[Arg:Int] [Local srcLen(242):Int]
		[Block:Dynamic]
			[Var p(243):Int] [Const:Int] 0
			[While:Void]
				[Parenthesis:Bool] [Const:Bool] true
				[Block:Int]
					[Binop:Int]
						[Local p(243):Int:Int]
						=
						[Call:Int]
							[Field:(this : hl.Bytes, pos : Int, size : Int, bytes : hl.Bytes, bytesPos : Int, bytesSize : Int) -> Int]
								[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
								[FStatic:(this : hl.Bytes, pos : Int, size : Int, bytes : hl.Bytes, bytesPos : Int, bytesSize : Int) -> Int]
									hl._Bytes.Bytes_Impl_
									find:(this : hl.Bytes, pos : Int, size : Int, bytes : hl.Bytes, bytesPos : Int, bytesSize : Int) -> Int
							[Field:hl.Bytes]
								[Const:String] this
								[FInstance:hl.Bytes]
									String
									bytes:hl.Bytes
							[Local start(239):Int:Int]
							[Binop:Int]
								[Local len(240):Int:Int]
								-
								[Local start(239):Int:Int]
							[Local src(241):hl.Bytes:hl.Bytes]
							[Const:Int] 0
							[Local srcLen(242):Int:Int]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Binop:Bool]
									[Local p(243):Int:Int]
									<
									[Const:Int] 0
								||
								[Binop:Bool]
									[Parenthesis:Int]
										[Binop:Int]
											[Local p(243):Int:Int]
											&
											[Const:Int] 1
									==
									[Const:Int] 0
						[Then:Dynamic] [Break:Dynamic]
					[Binop:Int]
						[Local start(239):Int:Int]
						=
						[Binop:Int]
							[Local p(243):Int:Int]
							+
							[Const:Int] 1
			[Return:Dynamic] [Local p(243):Int:Int]

	public function indexOf[Function:(str : String, ?startIndex : Null<Int>) -> Int]
		[Arg:String] [Local str(250):String]
		[Arg:Null<Int>]
			[Local startIndex(251):Null<Int>]
			[Const:Null<Int>] null
		[Block:Dynamic]
			[Var startByte(252):Int] [Const:Int] 0
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local startIndex(251):Null<Int>:Null<Int>]
							!=
							[Const:Null<Int>] null
						&&
						[Binop:Bool]
							[Local startIndex(251):Null<Int>:Null<Int>]
							>
							[Const:Int] 0
				[Then:Int] [Block:Int]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local startIndex(251):Null<Int>:Null<Int>]
								>=
								[Field:Int]
									[Const:String] this
									[FInstance:Int]
										String
										length:Int
						[Then:Void] [Block:Void]
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Local str(250):String:String]
										==
										[Const:String] ""
								[Then:Dynamic] [Return:Dynamic]
									[Field:Int]
										[Const:String] this
										[FInstance:Int]
											String
											length:Int
								[Else:Dynamic] [Return:Dynamic] [Const:Int] -1
					[Binop:Int]
						[Local startByte(252):Int:Int]
						=
						[Binop:Int]
							[Local startIndex(251):Null<Int>:Null<Int>]
							<<
							[Const:Int] 1
			[Var start(255):Int] [Local startByte(252):Int:Int]
			[Var len(256):Int]
				[Binop:Int]
					[Field:Int]
						[Const:String] this
						[FInstance:Int]
							String
							length:Int
					<<
					[Const:Int] 1
			[Var src(257):hl.Bytes]
				[Field:hl.Bytes]
					[Local str(250):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
			[Var srcLen(258):Int]
				[Binop:Int]
					[Field:Int]
						[Local str(250):String:String]
						[FInstance:Int]
							String
							length:Int
					<<
					[Const:Int] 1
			[Var p(259):Int] [Const:Int] 0
			[While:Void]
				[Parenthesis:Bool] [Const:Bool] true
				[Block:Int]
					[Binop:Int]
						[Local p(259):Int:Int]
						=
						[Call:Int]
							[Field:(this : hl.Bytes, pos : Int, size : Int, bytes : hl.Bytes, bytesPos : Int, bytesSize : Int) -> Int]
								[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
								[FStatic:(this : hl.Bytes, pos : Int, size : Int, bytes : hl.Bytes, bytesPos : Int, bytesSize : Int) -> Int]
									hl._Bytes.Bytes_Impl_
									find:(this : hl.Bytes, pos : Int, size : Int, bytes : hl.Bytes, bytesPos : Int, bytesSize : Int) -> Int
							[Field:hl.Bytes]
								[Const:String] this
								[FInstance:hl.Bytes]
									String
									bytes:hl.Bytes
							[Local start(255):Int:Int]
							[Binop:Int]
								[Local len(256):Int:Int]
								-
								[Local start(255):Int:Int]
							[Local src(257):hl.Bytes:hl.Bytes]
							[Const:Int] 0
							[Local srcLen(258):Int:Int]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Binop:Bool]
									[Local p(259):Int:Int]
									<
									[Const:Int] 0
								||
								[Binop:Bool]
									[Parenthesis:Int]
										[Binop:Int]
											[Local p(259):Int:Int]
											&
											[Const:Int] 1
									==
									[Const:Int] 0
						[Then:Dynamic] [Break:Dynamic]
					[Binop:Int]
						[Local start(255):Int:Int]
						=
						[Binop:Int]
							[Local p(259):Int:Int]
							+
							[Const:Int] 1
			[Var p(260):Int] [Local p(259):Int:Int]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local p(260):Int:Int]
						>
						[Const:Int] 0
				[Then:Int] [Binop:Int]
					[Local p(260):Int:Int]
					>>=
					[Const:Int] 1
			[Return:Dynamic] [Local p(260):Int:Int]

	public function lastIndexOf[Function:(str : String, ?startIndex : Null<Int>) -> Int]
		[Arg:String] [Local str(261):String]
		[Arg:Null<Int>]
			[Local startIndex(262):Null<Int>]
			[Const:Null<Int>] null
		[Block:Dynamic]
			[Var max(263):Int]
				[Field:Int]
					[Const:String] this
					[FInstance:Int]
						String
						length:Int
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local startIndex(262):Null<Int>:Null<Int>]
						!=
						[Const:Null<Int>] null
				[Then:Void] [Block:Void]
					[Binop:Int]
						[Local max(263):Int:Int]
						=
						[Binop:Int]
							[Local startIndex(262):Null<Int>:Null<Int>]
							+
							[Field:Int]
								[Local str(261):String:String]
								[FInstance:Int]
									String
									length:Int
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local max(263):Int:Int]
								<
								[Const:Int] 0
						[Then:Int] [Binop:Int]
							[Local max(263):Int:Int]
							=
							[Const:Int] 0
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local max(263):Int:Int]
								>
								[Field:Int]
									[Const:String] this
									[FInstance:Int]
										String
										length:Int
						[Then:Int] [Binop:Int]
							[Local max(263):Int:Int]
							=
							[Field:Int]
								[Const:String] this
								[FInstance:Int]
									String
									length:Int
			[Var pos(264):Int]
				[Binop:Int]
					[Local max(263):Int:Int]
					-
					[Field:Int]
						[Local str(261):String:String]
						[FInstance:Int]
							String
							length:Int
			[Var slen(265):Int]
				[Binop:Int]
					[Field:Int]
						[Local str(261):String:String]
						[FInstance:Int]
							String
							length:Int
					<<
					[Const:Int] 1
			[While:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local pos(264):Int:Int]
						>=
						[Const:Int] 0
				[Block:Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Call:Int]
									[Field:(this : hl.Bytes, pos : Int, bytes : hl.Bytes, bytesPos : Int, size : Int) -> Int]
										[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
										[FStatic:(this : hl.Bytes, pos : Int, bytes : hl.Bytes, bytesPos : Int, size : Int) -> Int]
											hl._Bytes.Bytes_Impl_
											compare:(this : hl.Bytes, pos : Int, bytes : hl.Bytes, bytesPos : Int, size : Int) -> Int
									[Field:hl.Bytes]
										[Const:String] this
										[FInstance:hl.Bytes]
											String
											bytes:hl.Bytes
									[Binop:Int]
										[Local pos(264):Int:Int]
										<<
										[Const:Int] 1
									[Field:hl.Bytes]
										[Local str(261):String:String]
										[FInstance:hl.Bytes]
											String
											bytes:hl.Bytes
									[Const:Int] 0
									[Local slen(265):Int:Int]
								==
								[Const:Int] 0
						[Then:Dynamic] [Return:Dynamic] [Local pos(264):Int:Int]
					[Unop:Int]
						--
						Prefix
						[Local pos(264):Int:Int]
			[Return:Dynamic] [Const:Int] -1

	public function split[Function:(delimiter : String) -> Array<String>]
		[Arg:String] [Local delimiter(271):String]
		[Block:Dynamic]
			[Var out(272):Array<String>] [ArrayDecl:Array<String>]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Field:Int]
							[Const:String] this
							[FInstance:Int]
								String
								length:Int
						==
						[Const:Int] 0
				[Then:Dynamic] [Block:Dynamic]
					[Call:Int]
						[Field:(x : String) -> Int]
							[Local out(272):Array<String>:Array<String>]
							[FInstance:(x : String) -> Int]
								Array<String>
								push:(x : Array.T) -> Int
						[Const:String] ""
					[Return:Dynamic] [Local out(272):Array<String>:Array<String>]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Field:Int]
							[Local delimiter(271):String:String]
							[FInstance:Int]
								String
								length:Int
						==
						[Const:Int] 0
				[Then:Dynamic] [Block:Dynamic]
					[Block:Void]
						[Var _g(298):Int] [Const:Int] 0
						[Var _g1(299):Int]
							[Field:Int]
								[Const:String] this
								[FInstance:Int]
									String
									length:Int
						[While:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local _g(298):Int:Int]
									<
									[Local _g1(299):Int:Int]
							[Block:Dynamic]
								[Var i(273):Int]
									[Unop:Int]
										++
										Postfix
										[Local _g(298):Int:Int]
								[Call:Int]
									[Field:(x : String) -> Int]
										[Local out(272):Array<String>:Array<String>]
										[FInstance:(x : String) -> Int]
											Array<String>
											push:(x : Array.T) -> Int
									[Call:String]
										[Field:(pos : Int, ?len : Null<Int>) -> String]
											[Const:String] this
											[FInstance:(pos : Int, ?len : Null<Int>) -> String]
												String
												substr:(pos : Int, ?len : Null<Int>) -> String
										[Local i(273):Int:Int]
										[Const:Int] 1
					[Return:Dynamic] [Local out(272):Array<String>:Array<String>]
			[Var pos(300):Int] [Const:Int] 0
			[Var dlen(301):Int]
				[Field:Int]
					[Local delimiter(271):String:String]
					[FInstance:Int]
						String
						length:Int
			[While:Void]
				[Parenthesis:Bool] [Const:Bool] true
				[Block:Int]
					[Var start(304):Int]
						[Binop:Int]
							[Local pos(300):Int:Int]
							<<
							[Const:Int] 1
					[Var len(305):Int]
						[Binop:Int]
							[Field:Int]
								[Const:String] this
								[FInstance:Int]
									String
									length:Int
							<<
							[Const:Int] 1
					[Var src(306):hl.Bytes]
						[Field:hl.Bytes]
							[Local delimiter(271):String:String]
							[FInstance:hl.Bytes]
								String
								bytes:hl.Bytes
					[Var srcLen(307):Int]
						[Binop:Int]
							[Local dlen(301):Int:Int]
							<<
							[Const:Int] 1
					[Var p(308):Int] [Const:Int] 0
					[While:Void]
						[Parenthesis:Bool] [Const:Bool] true
						[Block:Int]
							[Binop:Int]
								[Local p(308):Int:Int]
								=
								[Call:Int]
									[Field:(this : hl.Bytes, pos : Int, size : Int, bytes : hl.Bytes, bytesPos : Int, bytesSize : Int) -> Int]
										[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
										[FStatic:(this : hl.Bytes, pos : Int, size : Int, bytes : hl.Bytes, bytesPos : Int, bytesSize : Int) -> Int]
											hl._Bytes.Bytes_Impl_
											find:(this : hl.Bytes, pos : Int, size : Int, bytes : hl.Bytes, bytesPos : Int, bytesSize : Int) -> Int
									[Field:hl.Bytes]
										[Const:String] this
										[FInstance:hl.Bytes]
											String
											bytes:hl.Bytes
									[Local start(304):Int:Int]
									[Binop:Int]
										[Local len(305):Int:Int]
										-
										[Local start(304):Int:Int]
									[Local src(306):hl.Bytes:hl.Bytes]
									[Const:Int] 0
									[Local srcLen(307):Int:Int]
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Binop:Bool]
											[Local p(308):Int:Int]
											<
											[Const:Int] 0
										||
										[Binop:Bool]
											[Parenthesis:Int]
												[Binop:Int]
													[Local p(308):Int:Int]
													&
													[Const:Int] 1
											==
											[Const:Int] 0
								[Then:Dynamic] [Break:Dynamic]
							[Binop:Int]
								[Local start(304):Int:Int]
								=
								[Binop:Int]
									[Local p(308):Int:Int]
									+
									[Const:Int] 1
					[Var p(309):Int] [Local p(308):Int:Int]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local p(309):Int:Int]
								<
								[Const:Int] 0
						[Then:Dynamic] [Block:Dynamic]
							[Call:Int]
								[Field:(x : String) -> Int]
									[Local out(272):Array<String>:Array<String>]
									[FInstance:(x : String) -> Int]
										Array<String>
										push:(x : Array.T) -> Int
								[Call:String]
									[Field:(pos : Int, ?len : Null<Int>) -> String]
										[Const:String] this
										[FInstance:(pos : Int, ?len : Null<Int>) -> String]
											String
											substr:(pos : Int, ?len : Null<Int>) -> String
									[Local pos(300):Int:Int]
									[Binop:Int]
										[Field:Int]
											[Const:String] this
											[FInstance:Int]
												String
												length:Int
										-
										[Local pos(300):Int:Int]
							[Break:Dynamic]
					[Binop:Int]
						[Local p(309):Int:Int]
						>>=
						[Const:Int] 1
					[Call:Int]
						[Field:(x : String) -> Int]
							[Local out(272):Array<String>:Array<String>]
							[FInstance:(x : String) -> Int]
								Array<String>
								push:(x : Array.T) -> Int
						[Call:String]
							[Field:(pos : Int, ?len : Null<Int>) -> String]
								[Const:String] this
								[FInstance:(pos : Int, ?len : Null<Int>) -> String]
									String
									substr:(pos : Int, ?len : Null<Int>) -> String
							[Local pos(300):Int:Int]
							[Binop:Int]
								[Local p(309):Int:Int]
								-
								[Local pos(300):Int:Int]
					[Binop:Int]
						[Local pos(300):Int:Int]
						=
						[Binop:Int]
							[Local p(309):Int:Int]
							+
							[Local dlen(301):Int:Int]
			[Return:Dynamic] [Local out(272):Array<String>:Array<String>]

	public function substr[Function:(pos : Int, ?len : Null<Int>) -> String]
		[Arg:Int] [Local pos(274):Int]
		[Arg:Null<Int>]
			[Local len(275):Null<Int>]
			[Const:Null<Int>] null
		[Block:Dynamic]
			[Var sl(276):Int]
				[Field:Int]
					[Const:String] this
					[FInstance:Int]
						String
						length:Int
			[Var len(277):Int]
				[If:Int]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local len(275):Null<Int>:Null<Int>]
							==
							[Const:Null<Int>] null
					[Then:Int] [Local sl(276):Int:Int]
					[Else:Null<Int>] [Local len(275):Null<Int>:Null<Int>]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local len(277):Int:Int]
						==
						[Const:Int] 0
				[Then:Dynamic] [Return:Dynamic] [Const:String] ""
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local pos(274):Int:Int]
							!=
							[Const:Int] 0
						&&
						[Binop:Bool]
							[Local len(277):Int:Int]
							<
							[Const:Int] 0
				[Then:Dynamic] [Return:Dynamic] [Const:String] ""
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local pos(274):Int:Int]
						<
						[Const:Int] 0
				[Then:Void] [Block:Void]
					[Binop:Int]
						[Local pos(274):Int:Int]
						=
						[Binop:Int]
							[Local sl(276):Int:Int]
							+
							[Local pos(274):Int:Int]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local pos(274):Int:Int]
								<
								[Const:Int] 0
						[Then:Int] [Binop:Int]
							[Local pos(274):Int:Int]
							=
							[Const:Int] 0
				[Else:Void] [If:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local len(277):Int:Int]
							<
							[Const:Int] 0
					[Then:Void] [Block:Void]
						[Binop:Int]
							[Local len(277):Int:Int]
							=
							[Binop:Int]
								[Binop:Int]
									[Local sl(276):Int:Int]
									+
									[Local len(277):Int:Int]
								-
								[Local pos(274):Int:Int]
						[If:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local len(277):Int:Int]
									<
									[Const:Int] 0
							[Then:Dynamic] [Return:Dynamic] [Const:String] ""
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Cast:UInt]
							[Binop:Int]
								[Local pos(274):Int:Int]
								+
								[Local len(277):Int:Int]
						>
						[Cast:UInt] [Local sl(276):Int:Int]
				[Then:Int] [Binop:Int]
					[Local len(277):Int:Int]
					=
					[Binop:Int]
						[Local sl(276):Int:Int]
						-
						[Local pos(274):Int:Int]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local pos(274):Int:Int]
							<
							[Const:Int] 0
						||
						[Binop:Bool]
							[Local len(277):Int:Int]
							<=
							[Const:Int] 0
				[Then:Dynamic] [Return:Dynamic] [Const:String] ""
			[Var this1(281):hl.Bytes]
				[Call:hl.Bytes]
					[Field:(size : Int) -> hl.Bytes]
						[TypeExpr hl._Bytes.Bytes_Impl_:Abstract<hl.Bytes>]
						[FStatic:(size : Int) -> hl.Bytes]
							hl._Bytes.Bytes_Impl_
							alloc:(size : Int) -> hl.Bytes
					[Binop:Int]
						[Binop:Int]
							[Local len(277):Int:Int]
							+
							[Const:Int] 1
						<<
						[Const:Int] 1
			[Var b(282):hl.Bytes] [Local this1(281):hl.Bytes:hl.Bytes]
			[Call:Void]
				[Field:(this : hl.Bytes, pos : Int, src : hl.Bytes, srcPos : Int, len : Int) -> Void]
					[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
					[FStatic:(this : hl.Bytes, pos : Int, src : hl.Bytes, srcPos : Int, len : Int) -> Void]
						hl._Bytes.Bytes_Impl_
						blit:(this : hl.Bytes, pos : Int, src : hl.Bytes, srcPos : Int, len : Int) -> Void
				[Local b(282):hl.Bytes:hl.Bytes]
				[Const:Int] 0
				[Field:hl.Bytes]
					[Const:String] this
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				[Binop:Int]
					[Local pos(274):Int:Int]
					<<
					[Const:Int] 1
				[Binop:Int]
					[Local len(277):Int:Int]
					<<
					[Const:Int] 1
			[Call:Unknown<9>]
				[Ident:(hl.Bytes, Int, Int) -> Unknown<8>] $bsetui16
				[Local b(282):hl.Bytes:hl.Bytes]
				[Binop:Int]
					[Local len(277):Int:Int]
					<<
					[Const:Int] 1
				[Const:Int] 0
			[Var s(297):String]
				[Call:String]
					[Ident:Class<String> -> Unknown<1>] $new
					[TypeExpr String:Class<String>]
			[Binop:hl.Bytes]
				[Field:hl.Bytes]
					[Local s(297):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				=
				[Local b(282):hl.Bytes:hl.Bytes]
			[Binop:Int]
				[Field:Int]
					[Local s(297):String:String]
					[FInstance:Int]
						String
						length:Int
				=
				[Local len(277):Int:Int]
			[Return:Dynamic] [Local s(297):String:String]

	public function substring[Function:(startIndex : Int, ?endIndex : Null<Int>) -> String]
		[Arg:Int] [Local startIndex(312):Int]
		[Arg:Null<Int>]
			[Local endIndex(313):Null<Int>]
			[Const:Null<Int>] null
		[Block:Dynamic]
			[Var end(314):Int]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local endIndex(313):Null<Int>:Null<Int>]
						==
						[Const:Null<Int>] null
				[Then:Int] [Binop:Int]
					[Local end(314):Int:Int]
					=
					[Field:Int]
						[Const:String] this
						[FInstance:Int]
							String
							length:Int
				[Else:Void] [Block:Void]
					[Binop:Int]
						[Local end(314):Int:Int]
						=
						[Local endIndex(313):Null<Int>:Null<Int>]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local end(314):Int:Int]
								<
								[Const:Int] 0
						[Then:Int] [Binop:Int]
							[Local end(314):Int:Int]
							=
							[Const:Int] 0
						[Else:Void] [If:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local end(314):Int:Int]
									>
									[Field:Int]
										[Const:String] this
										[FInstance:Int]
											String
											length:Int
							[Then:Int] [Binop:Int]
								[Local end(314):Int:Int]
								=
								[Field:Int]
									[Const:String] this
									[FInstance:Int]
										String
										length:Int
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local startIndex(312):Int:Int]
						<
						[Const:Int] 0
				[Then:Int] [Binop:Int]
					[Local startIndex(312):Int:Int]
					=
					[Const:Int] 0
				[Else:Void] [If:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local startIndex(312):Int:Int]
							>
							[Field:Int]
								[Const:String] this
								[FInstance:Int]
									String
									length:Int
					[Then:Int] [Binop:Int]
						[Local startIndex(312):Int:Int]
						=
						[Field:Int]
							[Const:String] this
							[FInstance:Int]
								String
								length:Int
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local startIndex(312):Int:Int]
						>
						[Local end(314):Int:Int]
				[Then:Int] [Block:Int]
					[Var tmp(315):Int] [Local startIndex(312):Int:Int]
					[Binop:Int]
						[Local startIndex(312):Int:Int]
						=
						[Local end(314):Int:Int]
					[Binop:Int]
						[Local end(314):Int:Int]
						=
						[Local tmp(315):Int:Int]
			[Return:Dynamic]
				[Call:String]
					[Field:(pos : Int, ?len : Null<Int>) -> String]
						[Const:String] this
						[FInstance:(pos : Int, ?len : Null<Int>) -> String]
							String
							substr:(pos : Int, ?len : Null<Int>) -> String
					[Local startIndex(312):Int:Int]
					[Binop:Int]
						[Local end(314):Int:Int]
						-
						[Local startIndex(312):Int:Int]

	public function toString[Function:() -> String] [Block:Dynamic] [Return:Dynamic] [Const:String] this

	function toUtf8[Function:() -> hl.Bytes]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:hl.Bytes]
					[Field:(this : hl.Bytes, len : Int, outSize : hl.Ref<Int>) -> hl.Bytes]
						[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
						[FStatic:(this : hl.Bytes, len : Int, outSize : hl.Ref<Int>) -> hl.Bytes]
							hl._Bytes.Bytes_Impl_
							utf16ToUtf8:(this : hl.Bytes, len : Int, outSize : hl.Ref<Int>) -> hl.Bytes
					[Field:hl.Bytes]
						[Const:String] this
						[FInstance:hl.Bytes]
							String
							bytes:hl.Bytes
					[Const:Int] 0
					[Const:hl.Ref<Int>] null

	@:keep
	function __string[Function:() -> hl.Bytes]
		[Block:Dynamic]
			[Return:Dynamic]
				[Field:hl.Bytes]
					[Const:String] this
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes

	@:keep
	function __compare[Function:(v : Dynamic) -> Int]
		[Arg:Dynamic] [Local v(365):Dynamic]
		[Block:Dynamic]
			[Var s(366):String]
				[Call:String]
					[Field:(value : Unknown<10>, c : Class<String>) -> String]
						[TypeExpr Std:Class<Std>]
						[FStatic:(value : Unknown<10> : { }, c : Class<String>) -> String]
							Std
							downcast:(value : downcast.T, c : Class<downcast.S>) -> downcast.S
					[Local v(365):Dynamic:Dynamic]
					[TypeExpr String:Class<String>]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local s(366):String:String]
						==
						[Const:String] null
				[Then:Dynamic] [Return:Dynamic]
					[Call:Int]
						[Field:(a : Dynamic, b : Dynamic) -> Int]
							[TypeExpr hl.Api:Class<hl.Api>]
							[FStatic:(a : Dynamic, b : Dynamic) -> Int]
								hl.Api
								comparePointer:(a : Dynamic, b : Dynamic) -> Int
						[Const:String] this
						[Local v(365):Dynamic:Dynamic]
			[Var v(370):Int]
				[Call:Int]
					[Field:(this : hl.Bytes, bytes : hl.Bytes, size : Int) -> Int]
						[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
						[FStatic:(this : hl.Bytes, bytes : hl.Bytes, size : Int) -> Int]
							hl._Bytes.Bytes_Impl_
							compare16:(this : hl.Bytes, bytes : hl.Bytes, size : Int) -> Int
					[Field:hl.Bytes]
						[Const:String] this
						[FInstance:hl.Bytes]
							String
							bytes:hl.Bytes
					[Field:hl.Bytes]
						[Local s(366):String:String]
						[FInstance:hl.Bytes]
							String
							bytes:hl.Bytes
					[If:Int]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Field:Int]
									[Const:String] this
									[FInstance:Int]
										String
										length:Int
								<
								[Field:Int]
									[Local s(366):String:String]
									[FInstance:Int]
										String
										length:Int
						[Then:Int] [Field:Int]
							[Const:String] this
							[FInstance:Int]
								String
								length:Int
						[Else:Int] [Field:Int]
							[Local s(366):String:String]
							[FInstance:Int]
								String
								length:Int
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local v(370):Int:Int]
						==
						[Const:Int] 0
				[Then:Dynamic] [Return:Dynamic]
					[Binop:Int]
						[Field:Int]
							[Const:String] this
							[FInstance:Int]
								String
								length:Int
						-
						[Field:Int]
							[Local s(366):String:String]
							[FInstance:Int]
								String
								length:Int
				[Else:Dynamic] [Return:Dynamic] [Local v(370):Int:Int]

	public static function fromCharCode[Function:(code : Int) -> String]
		[Arg:Int] [Local code(316):Int]
		[Block:Void]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local code(316):Int:Int]
							>=
							[Const:Int] 0
						&&
						[Binop:Bool]
							[Local code(316):Int:Int]
							<
							[Const:Int] 65536
				[Then:Dynamic] [Block:Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Binop:Bool]
									[Local code(316):Int:Int]
									>=
									[Const:Int] 55296
								&&
								[Binop:Bool]
									[Local code(316):Int:Int]
									<=
									[Const:Int] 57343
						[Then:Dynamic] [Throw:Dynamic]
							[Call:Any]
								[Field:(value : Any) -> Any]
									[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
									[FStatic:(value : Any) -> Any]
										haxe.Exception
										thrown:(value : Any) -> Any
								[Binop:String]
									[Const:String] "Invalid unicode char "
									+
									[Local code(316):Int:Int]
					[Var this1(320):hl.Bytes]
						[Call:hl.Bytes]
							[Field:(size : Int) -> hl.Bytes]
								[TypeExpr hl._Bytes.Bytes_Impl_:Abstract<hl.Bytes>]
								[FStatic:(size : Int) -> hl.Bytes]
									hl._Bytes.Bytes_Impl_
									alloc:(size : Int) -> hl.Bytes
							[Const:Int] 4
					[Var b(321):hl.Bytes] [Local this1(320):hl.Bytes:hl.Bytes]
					[Call:Unknown<9>]
						[Ident:(hl.Bytes, Int, Int) -> Unknown<8>] $bsetui16
						[Local b(321):hl.Bytes:hl.Bytes]
						[Const:Int] 0
						[Local code(316):Int:Int]
					[Call:Unknown<9>]
						[Ident:(hl.Bytes, Int, Int) -> Unknown<8>] $bsetui16
						[Local b(321):hl.Bytes:hl.Bytes]
						[Const:Int] 2
						[Const:Int] 0
					[Var s(336):String]
						[Call:String]
							[Ident:Class<String> -> Unknown<1>] $new
							[TypeExpr String:Class<String>]
					[Binop:hl.Bytes]
						[Field:hl.Bytes]
							[Local s(336):String:String]
							[FInstance:hl.Bytes]
								String
								bytes:hl.Bytes
						=
						[Local b(321):hl.Bytes:hl.Bytes]
					[Binop:Int]
						[Field:Int]
							[Local s(336):String:String]
							[FInstance:Int]
								String
								length:Int
						=
						[Const:Int] 1
					[Return:Dynamic] [Local s(336):String:String]
				[Else:Void] [If:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local code(316):Int:Int]
							<
							[Const:Int] 1114112
					[Then:Dynamic] [Block:Dynamic]
						[Var this1(340):hl.Bytes]
							[Call:hl.Bytes]
								[Field:(size : Int) -> hl.Bytes]
									[TypeExpr hl._Bytes.Bytes_Impl_:Abstract<hl.Bytes>]
									[FStatic:(size : Int) -> hl.Bytes]
										hl._Bytes.Bytes_Impl_
										alloc:(size : Int) -> hl.Bytes
								[Const:Int] 6
						[Var b(341):hl.Bytes] [Local this1(340):hl.Bytes:hl.Bytes]
						[Binop:Int]
							[Local code(316):Int:Int]
							-=
							[Const:Int] 65536
						[Call:Unknown<9>]
							[Ident:(hl.Bytes, Int, Int) -> Unknown<8>] $bsetui16
							[Local b(341):hl.Bytes:hl.Bytes]
							[Const:Int] 0
							[Binop:Int]
								[Parenthesis:Int]
									[Binop:Int]
										[Local code(316):Int:Int]
										>>
										[Const:Int] 10
								+
								[Const:Int] 55296
						[Call:Unknown<9>]
							[Ident:(hl.Bytes, Int, Int) -> Unknown<8>] $bsetui16
							[Local b(341):hl.Bytes:hl.Bytes]
							[Const:Int] 2
							[Binop:Int]
								[Parenthesis:Int]
									[Binop:Int]
										[Local code(316):Int:Int]
										&
										[Const:Int] 1023
								+
								[Const:Int] 56320
						[Call:Unknown<9>]
							[Ident:(hl.Bytes, Int, Int) -> Unknown<8>] $bsetui16
							[Local b(341):hl.Bytes:hl.Bytes]
							[Const:Int] 4
							[Const:Int] 0
						[Var s(361):String]
							[Call:String]
								[Ident:Class<String> -> Unknown<1>] $new
								[TypeExpr String:Class<String>]
						[Binop:hl.Bytes]
							[Field:hl.Bytes]
								[Local s(361):String:String]
								[FInstance:hl.Bytes]
									String
									bytes:hl.Bytes
							=
							[Local b(341):hl.Bytes:hl.Bytes]
						[Binop:Int]
							[Field:Int]
								[Local s(361):String:String]
								[FInstance:Int]
									String
									length:Int
							=
							[Const:Int] 2
						[Return:Dynamic] [Local s(361):String:String]
					[Else:Dynamic] [Throw:Dynamic]
						[Call:Any]
							[Field:(value : Any) -> Any]
								[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
								[FStatic:(value : Any) -> Any]
									haxe.Exception
									thrown:(value : Any) -> Any
							[Binop:String]
								[Const:String] "Invalid unicode char "
								+
								[Local code(316):Int:Int]

	@:has_untyped @:keep
	static inline function __alloc__[Function:(b : hl.Bytes, length : Int) -> String]
		[Arg:hl.Bytes] [Local b(2):hl.Bytes]
		[Arg:Int] [Local length(3):Int]
		[Block:Dynamic]
			[Var s(4):String]
				[Call:String]
					[Ident:Class<String> -> Unknown<1>] $new
					[TypeExpr String:Class<String>]
			[Binop:hl.Bytes]
				[Field:hl.Bytes]
					[Local s(4):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				=
				[Local b(2):hl.Bytes:hl.Bytes]
			[Binop:Int]
				[Field:Int]
					[Local s(4):String:String]
					[FInstance:Int]
						String
						length:Int
				=
				[Local length(3):Int:Int]
			[Return:Dynamic] [Local s(4):String:String]

	@:keep
	static function call_toString[Function:(v : Dynamic) -> hl.Bytes]
		[Arg:Dynamic] [Local v(372):Dynamic]
		[Block:Dynamic]
			[Var s(373):String]
				[Call:Dynamic]
					[Field:Dynamic]
						[Local v(372):Dynamic:Dynamic]
						[FDynamic:Dynamic] toString
			[Return:Dynamic]
				[Field:hl.Bytes]
					[Local s(373):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes

	@:has_untyped
	static inline function fromUCS2[Function:(b : hl.Bytes) -> String]
		[Arg:hl.Bytes] [Local b(374):hl.Bytes]
		[Block:Dynamic]
			[Var s(375):String]
				[Call:String]
					[Ident:Class<String> -> Unknown<11>] $new
					[TypeExpr String:Class<String>]
			[Binop:hl.Bytes]
				[Field:hl.Bytes]
					[Local s(375):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				=
				[Local b(374):hl.Bytes:hl.Bytes]
			[Binop:Int]
				[Field:Int]
					[Local s(375):String:String]
					[FInstance:Int]
						String
						length:Int
				=
				[Call:Int]
					[Field:(this : hl.Bytes, bytePos : Int) -> Int]
						[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
						[FStatic:(this : hl.Bytes, bytePos : Int) -> Int]
							hl._Bytes.Bytes_Impl_
							ucs2Length:(this : hl.Bytes, bytePos : Int) -> Int
					[Local b(374):hl.Bytes:hl.Bytes]
					[Const:Int] 0
			[Return:Dynamic] [Local s(375):String:String]

	@:keep
	static function fromUTF8[Function:(b : hl.Bytes) -> String]
		[Arg:hl.Bytes] [Local b(378):hl.Bytes]
		[Block:Dynamic]
			[Var outLen(379):Int] [Const:Int] 0
			[Var this1(391):hl.Ref<Int>]
				[Call:hl.Ref<Int>]
					[Ident:Int -> Unknown<0>] $ref
					[Local outLen(379):Int:Int]
			[Var b2(392):hl.Bytes]
				[Call:hl.Bytes]
					[Field:(this : hl.Bytes, bytePos : Int, outSize : hl.Ref<Int>) -> hl.Bytes]
						[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
						[FStatic:(this : hl.Bytes, bytePos : Int, outSize : hl.Ref<Int>) -> hl.Bytes]
							hl._Bytes.Bytes_Impl_
							utf8ToUtf16:(this : hl.Bytes, bytePos : Int, outSize : hl.Ref<Int>) -> hl.Bytes
					[Local b(378):hl.Bytes:hl.Bytes]
					[Const:Int] 0
					[Meta:hl.Ref<Int>]
						:implicitCast
						[Local this1(391):hl.Ref<Int>:hl.Ref<Int>]
			[Var s(397):String]
				[Call:String]
					[Ident:Class<String> -> Unknown<1>] $new
					[TypeExpr String:Class<String>]
			[Binop:hl.Bytes]
				[Field:hl.Bytes]
					[Local s(397):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				=
				[Local b2(392):hl.Bytes:hl.Bytes]
			[Binop:Int]
				[Field:Int]
					[Local s(397):String:String]
					[FInstance:Int]
						String
						length:Int
				=
				[Binop:Int]
					[Local outLen(379):Int:Int]
					>>
					[Const:Int] 1
			[Return:Dynamic] [Local s(397):String:String]

	@:keep
	static function __add__[Function:(a : String, b : String) -> String]
		[Arg:String] [Local a(398):String]
		[Arg:String] [Local b(399):String]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local a(398):String:String]
						==
						[Const:String] null
				[Then:String] [Binop:String]
					[Local a(398):String:String]
					=
					[Const:String] "null"
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local b(399):String:String]
						==
						[Const:String] null
				[Then:String] [Binop:String]
					[Local b(399):String:String]
					=
					[Const:String] "null"
			[Var asize(400):Int]
				[Binop:Int]
					[Field:Int]
						[Local a(398):String:String]
						[FInstance:Int]
							String
							length:Int
					<<
					[Const:Int] 1
			[Var bsize(401):Int]
				[Binop:Int]
					[Field:Int]
						[Local b(399):String:String]
						[FInstance:Int]
							String
							length:Int
					<<
					[Const:Int] 1
			[Var tot(402):Int]
				[Binop:Int]
					[Local asize(400):Int:Int]
					+
					[Local bsize(401):Int:Int]
			[Var this1(406):hl.Bytes]
				[Call:hl.Bytes]
					[Field:(size : Int) -> hl.Bytes]
						[TypeExpr hl._Bytes.Bytes_Impl_:Abstract<hl.Bytes>]
						[FStatic:(size : Int) -> hl.Bytes]
							hl._Bytes.Bytes_Impl_
							alloc:(size : Int) -> hl.Bytes
					[Binop:Int]
						[Local tot(402):Int:Int]
						+
						[Const:Int] 2
			[Var bytes(407):hl.Bytes] [Local this1(406):hl.Bytes:hl.Bytes]
			[Call:Void]
				[Field:(this : hl.Bytes, pos : Int, src : hl.Bytes, srcPos : Int, len : Int) -> Void]
					[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
					[FStatic:(this : hl.Bytes, pos : Int, src : hl.Bytes, srcPos : Int, len : Int) -> Void]
						hl._Bytes.Bytes_Impl_
						blit:(this : hl.Bytes, pos : Int, src : hl.Bytes, srcPos : Int, len : Int) -> Void
				[Local bytes(407):hl.Bytes:hl.Bytes]
				[Const:Int] 0
				[Field:hl.Bytes]
					[Local a(398):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				[Const:Int] 0
				[Local asize(400):Int:Int]
			[Call:Void]
				[Field:(this : hl.Bytes, pos : Int, src : hl.Bytes, srcPos : Int, len : Int) -> Void]
					[TypeExpr hl._Bytes.Bytes_Impl_:{ Statics hl._Bytes.Bytes_Impl_ }]
					[FStatic:(this : hl.Bytes, pos : Int, src : hl.Bytes, srcPos : Int, len : Int) -> Void]
						hl._Bytes.Bytes_Impl_
						blit:(this : hl.Bytes, pos : Int, src : hl.Bytes, srcPos : Int, len : Int) -> Void
				[Local bytes(407):hl.Bytes:hl.Bytes]
				[Local asize(400):Int:Int]
				[Field:hl.Bytes]
					[Local b(399):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				[Const:Int] 0
				[Local bsize(401):Int:Int]
			[Call:Unknown<9>]
				[Ident:(hl.Bytes, Int, Int) -> Unknown<8>] $bsetui16
				[Local bytes(407):hl.Bytes:hl.Bytes]
				[Local tot(402):Int:Int]
				[Const:Int] 0
			[Var s(417):String]
				[Call:String]
					[Ident:Class<String> -> Unknown<1>] $new
					[TypeExpr String:Class<String>]
			[Binop:hl.Bytes]
				[Field:hl.Bytes]
					[Local s(417):String:String]
					[FInstance:hl.Bytes]
						String
						bytes:hl.Bytes
				=
				[Local bytes(407):hl.Bytes:hl.Bytes]
			[Binop:Int]
				[Field:Int]
					[Local s(417):String:String]
					[FInstance:Int]
						String
						length:Int
				=
				[Binop:Int]
					[Local tot(402):Int:Int]
					>>
					[Const:Int] 1
			[Return:Dynamic] [Local s(417):String:String]
}