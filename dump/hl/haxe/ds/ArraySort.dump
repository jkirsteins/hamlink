@:keep @:directlyUsed @:used
class haxe.ds.ArraySort {

	public static function sort<T>[Function:(a : Array<sort.T>, cmp : ((sort.T, sort.T) -> Int)) -> Void]
		[Arg:Array<sort.T>] [Local a(1320):Array<sort.T>]
		[Arg:(sort.T, sort.T) -> Int] [Local cmp(1321):(sort.T, sort.T) -> Int]
		[Block:Void]
			[Call:Void]
				[Field:(a : Array<sort.T>, cmp : ((sort.T, sort.T) -> Int), from : Int, to : Int) -> Void]
					[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
					[FStatic:(a : Array<sort.T>, cmp : ((sort.T, sort.T) -> Int), from : Int, to : Int) -> Void]
						haxe.ds.ArraySort
						rec:(a : Array<rec.T>, cmp : ((rec.T, rec.T) -> Int), from : Int, to : Int) -> Void
				[Local a(1320):Array<sort.T>:Array<sort.T>]
				[Local cmp(1321):(sort.T, sort.T) -> Int:(sort.T, sort.T) -> Int]
				[Const:Int] 0
				[Field:Int]
					[Local a(1320):Array<sort.T>:Array<sort.T>]
					[FInstance:Int]
						Array<sort.T>
						length:Int

	static function rec<T>[Function:(a : Array<rec.T>, cmp : ((rec.T, rec.T) -> Int), from : Int, to : Int) -> Void]
		[Arg:Array<rec.T>] [Local a(1322):Array<rec.T>]
		[Arg:(rec.T, rec.T) -> Int] [Local cmp(1323):(rec.T, rec.T) -> Int]
		[Arg:Int] [Local from(1324):Int]
		[Arg:Int] [Local to(1325):Int]
		[Block:Void]
			[Var middle(1326):Int]
				[Binop:Int]
					[Binop:Int]
						[Local from(1324):Int:Int]
						+
						[Local to(1325):Int:Int]
					>>
					[Const:Int] 1
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Int]
							[Local to(1325):Int:Int]
							-
							[Local from(1324):Int:Int]
						<
						[Const:Int] 12
				[Then:Dynamic] [Block:Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local to(1325):Int:Int]
								<=
								[Local from(1324):Int:Int]
						[Then:Dynamic] [Return:Dynamic]
					[Block:Void]
						[Var _g(1343):Int]
							[Binop:Int]
								[Local from(1324):Int:Int]
								+
								[Const:Int] 1
						[Var _g1(1344):Int] [Local to(1325):Int:Int]
						[While:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local _g(1343):Int:Int]
									<
									[Local _g1(1344):Int:Int]
							[Block:Dynamic]
								[Var i(1327):Int]
									[Unop:Int]
										++
										Postfix
										[Local _g(1343):Int:Int]
								[Var j(1328):Int] [Local i(1327):Int:Int]
								[While:Void]
									[Parenthesis:Bool]
										[Binop:Bool]
											[Local j(1328):Int:Int]
											>
											[Local from(1324):Int:Int]
									[Block:Dynamic]
										[If:Void]
											[Parenthesis:Bool]
												[Binop:Bool]
													[Call:Int]
														[Local cmp(1323):(rec.T, rec.T) -> Int:(rec.T, rec.T) -> Int]
														[Array:rec.T]
															[Local a(1322):Array<rec.T>:Array<rec.T>]
															[Local j(1328):Int:Int]
														[Array:rec.T]
															[Local a(1322):Array<rec.T>:Array<rec.T>]
															[Binop:Int]
																[Local j(1328):Int:Int]
																-
																[Const:Int] 1
													<
													[Const:Int] 0
											[Then:Void] [Call:Void]
												[Field:(a : Array<rec.T>, i : Int, j : Int) -> Void]
													[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
													[FStatic:(a : Array<rec.T>, i : Int, j : Int) -> Void]
														haxe.ds.ArraySort
														swap:(a : Array<swap.T>, i : Int, j : Int) -> Void
												[Local a(1322):Array<rec.T>:Array<rec.T>]
												[Binop:Int]
													[Local j(1328):Int:Int]
													-
													[Const:Int] 1
												[Local j(1328):Int:Int]
											[Else:Dynamic] [Break:Dynamic]
										[Unop:Int]
											--
											Prefix
											[Local j(1328):Int:Int]
					[Return:Dynamic]
			[Call:Void]
				[Field:(a : Array<rec.T>, cmp : ((rec.T, rec.T) -> Int), from : Int, to : Int) -> Void]
					[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
					[FStatic:(a : Array<rec.T>, cmp : ((rec.T, rec.T) -> Int), from : Int, to : Int) -> Void]
						haxe.ds.ArraySort
						rec:(a : Array<rec.T>, cmp : ((rec.T, rec.T) -> Int), from : Int, to : Int) -> Void
				[Local a(1322):Array<rec.T>:Array<rec.T>]
				[Local cmp(1323):(rec.T, rec.T) -> Int:(rec.T, rec.T) -> Int]
				[Local from(1324):Int:Int]
				[Local middle(1326):Int:Int]
			[Call:Void]
				[Field:(a : Array<rec.T>, cmp : ((rec.T, rec.T) -> Int), from : Int, to : Int) -> Void]
					[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
					[FStatic:(a : Array<rec.T>, cmp : ((rec.T, rec.T) -> Int), from : Int, to : Int) -> Void]
						haxe.ds.ArraySort
						rec:(a : Array<rec.T>, cmp : ((rec.T, rec.T) -> Int), from : Int, to : Int) -> Void
				[Local a(1322):Array<rec.T>:Array<rec.T>]
				[Local cmp(1323):(rec.T, rec.T) -> Int:(rec.T, rec.T) -> Int]
				[Local middle(1326):Int:Int]
				[Local to(1325):Int:Int]
			[Call:Void]
				[Field:(a : Array<rec.T>, cmp : ((rec.T, rec.T) -> Int), from : Int, pivot : Int, to : Int, len1 : Int, len2 : Int) -> Void]
					[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
					[FStatic:(a : Array<rec.T>, cmp : ((rec.T, rec.T) -> Int), from : Int, pivot : Int, to : Int, len1 : Int, len2 : Int) -> Void]
						haxe.ds.ArraySort
						doMerge:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, pivot : Int, to : Int, len1 : Int, len2 : Int) -> Void
				[Local a(1322):Array<rec.T>:Array<rec.T>]
				[Local cmp(1323):(rec.T, rec.T) -> Int:(rec.T, rec.T) -> Int]
				[Local from(1324):Int:Int]
				[Local middle(1326):Int:Int]
				[Local to(1325):Int:Int]
				[Binop:Int]
					[Local middle(1326):Int:Int]
					-
					[Local from(1324):Int:Int]
				[Binop:Int]
					[Local to(1325):Int:Int]
					-
					[Local middle(1326):Int:Int]

	static function doMerge<T>[Function:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, pivot : Int, to : Int, len1 : Int, len2 : Int) -> Void]
		[Arg:Array<doMerge.T>] [Local a(1345):Array<doMerge.T>]
		[Arg:(doMerge.T, doMerge.T) -> Int] [Local cmp(1346):(doMerge.T, doMerge.T) -> Int]
		[Arg:Int] [Local from(1347):Int]
		[Arg:Int] [Local pivot(1348):Int]
		[Arg:Int] [Local to(1349):Int]
		[Arg:Int] [Local len1(1350):Int]
		[Arg:Int] [Local len2(1351):Int]
		[Block:Void]
			[Var first_cut(1352):Int]
			[Var second_cut(1353):Int]
			[Var len11(1354):Int]
			[Var len22(1355):Int]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local len1(1350):Int:Int]
							==
							[Const:Int] 0
						||
						[Binop:Bool]
							[Local len2(1351):Int:Int]
							==
							[Const:Int] 0
				[Then:Dynamic] [Return:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Int]
							[Local len1(1350):Int:Int]
							+
							[Local len2(1351):Int:Int]
						==
						[Const:Int] 2
				[Then:Dynamic] [Block:Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Call:Int]
									[Local cmp(1346):(doMerge.T, doMerge.T) -> Int:(doMerge.T, doMerge.T) -> Int]
									[Array:doMerge.T]
										[Local a(1345):Array<doMerge.T>:Array<doMerge.T>]
										[Local pivot(1348):Int:Int]
									[Array:doMerge.T]
										[Local a(1345):Array<doMerge.T>:Array<doMerge.T>]
										[Local from(1347):Int:Int]
								<
								[Const:Int] 0
						[Then:Void] [Call:Void]
							[Field:(a : Array<doMerge.T>, i : Int, j : Int) -> Void]
								[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
								[FStatic:(a : Array<doMerge.T>, i : Int, j : Int) -> Void]
									haxe.ds.ArraySort
									swap:(a : Array<swap.T>, i : Int, j : Int) -> Void
							[Local a(1345):Array<doMerge.T>:Array<doMerge.T>]
							[Local pivot(1348):Int:Int]
							[Local from(1347):Int:Int]
					[Return:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local len1(1350):Int:Int]
						>
						[Local len2(1351):Int:Int]
				[Then:Int] [Block:Int]
					[Binop:Int]
						[Local len11(1354):Int:Int]
						=
						[Binop:Int]
							[Local len1(1350):Int:Int]
							>>
							[Const:Int] 1
					[Binop:Int]
						[Local first_cut(1352):Int:Int]
						=
						[Binop:Int]
							[Local from(1347):Int:Int]
							+
							[Local len11(1354):Int:Int]
					[Binop:Int]
						[Local second_cut(1353):Int:Int]
						=
						[Call:Int]
							[Field:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, to : Int, val : Int) -> Int]
								[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
								[FStatic:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, to : Int, val : Int) -> Int]
									haxe.ds.ArraySort
									lower:(a : Array<lower.T>, cmp : ((lower.T, lower.T) -> Int), from : Int, to : Int, val : Int) -> Int
							[Local a(1345):Array<doMerge.T>:Array<doMerge.T>]
							[Local cmp(1346):(doMerge.T, doMerge.T) -> Int:(doMerge.T, doMerge.T) -> Int]
							[Local pivot(1348):Int:Int]
							[Local to(1349):Int:Int]
							[Local first_cut(1352):Int:Int]
					[Binop:Int]
						[Local len22(1355):Int:Int]
						=
						[Binop:Int]
							[Local second_cut(1353):Int:Int]
							-
							[Local pivot(1348):Int:Int]
				[Else:Int] [Block:Int]
					[Binop:Int]
						[Local len22(1355):Int:Int]
						=
						[Binop:Int]
							[Local len2(1351):Int:Int]
							>>
							[Const:Int] 1
					[Binop:Int]
						[Local second_cut(1353):Int:Int]
						=
						[Binop:Int]
							[Local pivot(1348):Int:Int]
							+
							[Local len22(1355):Int:Int]
					[Binop:Int]
						[Local first_cut(1352):Int:Int]
						=
						[Call:Int]
							[Field:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, to : Int, val : Int) -> Int]
								[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
								[FStatic:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, to : Int, val : Int) -> Int]
									haxe.ds.ArraySort
									upper:(a : Array<upper.T>, cmp : ((upper.T, upper.T) -> Int), from : Int, to : Int, val : Int) -> Int
							[Local a(1345):Array<doMerge.T>:Array<doMerge.T>]
							[Local cmp(1346):(doMerge.T, doMerge.T) -> Int:(doMerge.T, doMerge.T) -> Int]
							[Local from(1347):Int:Int]
							[Local pivot(1348):Int:Int]
							[Local second_cut(1353):Int:Int]
					[Binop:Int]
						[Local len11(1354):Int:Int]
						=
						[Binop:Int]
							[Local first_cut(1352):Int:Int]
							-
							[Local from(1347):Int:Int]
			[Call:Void]
				[Field:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, mid : Int, to : Int) -> Void]
					[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
					[FStatic:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, mid : Int, to : Int) -> Void]
						haxe.ds.ArraySort
						rotate:(a : Array<rotate.T>, cmp : ((rotate.T, rotate.T) -> Int), from : Int, mid : Int, to : Int) -> Void
				[Local a(1345):Array<doMerge.T>:Array<doMerge.T>]
				[Local cmp(1346):(doMerge.T, doMerge.T) -> Int:(doMerge.T, doMerge.T) -> Int]
				[Local first_cut(1352):Int:Int]
				[Local pivot(1348):Int:Int]
				[Local second_cut(1353):Int:Int]
			[Var new_mid(1356):Int]
				[Binop:Int]
					[Local first_cut(1352):Int:Int]
					+
					[Local len22(1355):Int:Int]
			[Call:Void]
				[Field:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, pivot : Int, to : Int, len1 : Int, len2 : Int) -> Void]
					[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
					[FStatic:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, pivot : Int, to : Int, len1 : Int, len2 : Int) -> Void]
						haxe.ds.ArraySort
						doMerge:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, pivot : Int, to : Int, len1 : Int, len2 : Int) -> Void
				[Local a(1345):Array<doMerge.T>:Array<doMerge.T>]
				[Local cmp(1346):(doMerge.T, doMerge.T) -> Int:(doMerge.T, doMerge.T) -> Int]
				[Local from(1347):Int:Int]
				[Local first_cut(1352):Int:Int]
				[Local new_mid(1356):Int:Int]
				[Local len11(1354):Int:Int]
				[Local len22(1355):Int:Int]
			[Call:Void]
				[Field:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, pivot : Int, to : Int, len1 : Int, len2 : Int) -> Void]
					[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
					[FStatic:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, pivot : Int, to : Int, len1 : Int, len2 : Int) -> Void]
						haxe.ds.ArraySort
						doMerge:(a : Array<doMerge.T>, cmp : ((doMerge.T, doMerge.T) -> Int), from : Int, pivot : Int, to : Int, len1 : Int, len2 : Int) -> Void
				[Local a(1345):Array<doMerge.T>:Array<doMerge.T>]
				[Local cmp(1346):(doMerge.T, doMerge.T) -> Int:(doMerge.T, doMerge.T) -> Int]
				[Local new_mid(1356):Int:Int]
				[Local second_cut(1353):Int:Int]
				[Local to(1349):Int:Int]
				[Binop:Int]
					[Local len1(1350):Int:Int]
					-
					[Local len11(1354):Int:Int]
				[Binop:Int]
					[Local len2(1351):Int:Int]
					-
					[Local len22(1355):Int:Int]

	static function rotate<T>[Function:(a : Array<rotate.T>, cmp : ((rotate.T, rotate.T) -> Int), from : Int, mid : Int, to : Int) -> Void]
		[Arg:Array<rotate.T>] [Local a(1391):Array<rotate.T>]
		[Arg:(rotate.T, rotate.T) -> Int] [Local cmp(1392):(rotate.T, rotate.T) -> Int]
		[Arg:Int] [Local from(1393):Int]
		[Arg:Int] [Local mid(1394):Int]
		[Arg:Int] [Local to(1395):Int]
		[Block:Void]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local from(1393):Int:Int]
							==
							[Local mid(1394):Int:Int]
						||
						[Binop:Bool]
							[Local mid(1394):Int:Int]
							==
							[Local to(1395):Int:Int]
				[Then:Dynamic] [Return:Dynamic]
			[Var n(1396):Int]
				[Call:Int]
					[Field:(m : Int, n : Int) -> Int]
						[TypeExpr haxe.ds.ArraySort:Class<haxe.ds.ArraySort>]
						[FStatic:(m : Int, n : Int) -> Int]
							haxe.ds.ArraySort
							gcd:(m : Int, n : Int) -> Int
					[Binop:Int]
						[Local to(1395):Int:Int]
						-
						[Local from(1393):Int:Int]
					[Binop:Int]
						[Local mid(1394):Int:Int]
						-
						[Local from(1393):Int:Int]
			[While:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Unop:Int]
							--
							Postfix
							[Local n(1396):Int:Int]
						!=
						[Const:Int] 0
				[Block:Dynamic]
					[Var val(1400):rotate.T]
						[Array:rotate.T]
							[Local a(1391):Array<rotate.T>:Array<rotate.T>]
							[Binop:Int]
								[Local from(1393):Int:Int]
								+
								[Local n(1396):Int:Int]
					[Var shift(1401):Int]
						[Binop:Int]
							[Local mid(1394):Int:Int]
							-
							[Local from(1393):Int:Int]
					[Var p1(1402):Int]
						[Binop:Int]
							[Local from(1393):Int:Int]
							+
							[Local n(1396):Int:Int]
					[Var p2(1403):Int]
						[Binop:Int]
							[Binop:Int]
								[Local from(1393):Int:Int]
								+
								[Local n(1396):Int:Int]
							+
							[Local shift(1401):Int:Int]
					[While:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local p2(1403):Int:Int]
								!=
								[Binop:Int]
									[Local from(1393):Int:Int]
									+
									[Local n(1396):Int:Int]
						[Block:Dynamic]
							[Binop:rotate.T]
								[Array:rotate.T]
									[Local a(1391):Array<rotate.T>:Array<rotate.T>]
									[Local p1(1402):Int:Int]
								=
								[Array:rotate.T]
									[Local a(1391):Array<rotate.T>:Array<rotate.T>]
									[Local p2(1403):Int:Int]
							[Binop:Int]
								[Local p1(1402):Int:Int]
								=
								[Local p2(1403):Int:Int]
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Binop:Int]
											[Local to(1395):Int:Int]
											-
											[Local p2(1403):Int:Int]
										>
										[Local shift(1401):Int:Int]
								[Then:Int] [Binop:Int]
									[Local p2(1403):Int:Int]
									+=
									[Local shift(1401):Int:Int]
								[Else:Int] [Binop:Int]
									[Local p2(1403):Int:Int]
									=
									[Binop:Int]
										[Local from(1393):Int:Int]
										+
										[Parenthesis:Int]
											[Binop:Int]
												[Local shift(1401):Int:Int]
												-
												[Parenthesis:Int]
													[Binop:Int]
														[Local to(1395):Int:Int]
														-
														[Local p2(1403):Int:Int]
					[Binop:rotate.T]
						[Array:rotate.T]
							[Local a(1391):Array<rotate.T>:Array<rotate.T>]
							[Local p1(1402):Int:Int]
						=
						[Local val(1400):rotate.T:rotate.T]

	static function gcd[Function:(m : Int, n : Int) -> Int]
		[Arg:Int] [Local m(1397):Int]
		[Arg:Int] [Local n(1398):Int]
		[Block:Dynamic]
			[While:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local n(1398):Int:Int]
						!=
						[Const:Int] 0
				[Block:Dynamic]
					[Var t(1399):Int]
						[Binop:Int]
							[Local m(1397):Int:Int]
							%
							[Local n(1398):Int:Int]
					[Binop:Int]
						[Local m(1397):Int:Int]
						=
						[Local n(1398):Int:Int]
					[Binop:Int]
						[Local n(1398):Int:Int]
						=
						[Local t(1399):Int:Int]
			[Return:Dynamic] [Local m(1397):Int:Int]

	static function upper<T>[Function:(a : Array<upper.T>, cmp : ((upper.T, upper.T) -> Int), from : Int, to : Int, val : Int) -> Int]
		[Arg:Array<upper.T>] [Local a(1377):Array<upper.T>]
		[Arg:(upper.T, upper.T) -> Int] [Local cmp(1378):(upper.T, upper.T) -> Int]
		[Arg:Int] [Local from(1379):Int]
		[Arg:Int] [Local to(1380):Int]
		[Arg:Int] [Local val(1381):Int]
		[Block:Dynamic]
			[Var len(1382):Int]
				[Binop:Int]
					[Local to(1380):Int:Int]
					-
					[Local from(1379):Int:Int]
			[Var half(1383):Int]
			[Var mid(1384):Int]
			[While:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local len(1382):Int:Int]
						>
						[Const:Int] 0
				[Block:Dynamic]
					[Binop:Int]
						[Local half(1383):Int:Int]
						=
						[Binop:Int]
							[Local len(1382):Int:Int]
							>>
							[Const:Int] 1
					[Binop:Int]
						[Local mid(1384):Int:Int]
						=
						[Binop:Int]
							[Local from(1379):Int:Int]
							+
							[Local half(1383):Int:Int]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Call:Int]
									[Local cmp(1378):(upper.T, upper.T) -> Int:(upper.T, upper.T) -> Int]
									[Array:upper.T]
										[Local a(1377):Array<upper.T>:Array<upper.T>]
										[Local val(1381):Int:Int]
									[Array:upper.T]
										[Local a(1377):Array<upper.T>:Array<upper.T>]
										[Local mid(1384):Int:Int]
								<
								[Const:Int] 0
						[Then:Int] [Binop:Int]
							[Local len(1382):Int:Int]
							=
							[Local half(1383):Int:Int]
						[Else:Int] [Block:Int]
							[Binop:Int]
								[Local from(1379):Int:Int]
								=
								[Binop:Int]
									[Local mid(1384):Int:Int]
									+
									[Const:Int] 1
							[Binop:Int]
								[Local len(1382):Int:Int]
								=
								[Binop:Int]
									[Binop:Int]
										[Local len(1382):Int:Int]
										-
										[Local half(1383):Int:Int]
									-
									[Const:Int] 1
			[Return:Dynamic] [Local from(1379):Int:Int]

	static function lower<T>[Function:(a : Array<lower.T>, cmp : ((lower.T, lower.T) -> Int), from : Int, to : Int, val : Int) -> Int]
		[Arg:Array<lower.T>] [Local a(1363):Array<lower.T>]
		[Arg:(lower.T, lower.T) -> Int] [Local cmp(1364):(lower.T, lower.T) -> Int]
		[Arg:Int] [Local from(1365):Int]
		[Arg:Int] [Local to(1366):Int]
		[Arg:Int] [Local val(1367):Int]
		[Block:Dynamic]
			[Var len(1368):Int]
				[Binop:Int]
					[Local to(1366):Int:Int]
					-
					[Local from(1365):Int:Int]
			[Var half(1369):Int]
			[Var mid(1370):Int]
			[While:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local len(1368):Int:Int]
						>
						[Const:Int] 0
				[Block:Dynamic]
					[Binop:Int]
						[Local half(1369):Int:Int]
						=
						[Binop:Int]
							[Local len(1368):Int:Int]
							>>
							[Const:Int] 1
					[Binop:Int]
						[Local mid(1370):Int:Int]
						=
						[Binop:Int]
							[Local from(1365):Int:Int]
							+
							[Local half(1369):Int:Int]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Call:Int]
									[Local cmp(1364):(lower.T, lower.T) -> Int:(lower.T, lower.T) -> Int]
									[Array:lower.T]
										[Local a(1363):Array<lower.T>:Array<lower.T>]
										[Local mid(1370):Int:Int]
									[Array:lower.T]
										[Local a(1363):Array<lower.T>:Array<lower.T>]
										[Local val(1367):Int:Int]
								<
								[Const:Int] 0
						[Then:Int] [Block:Int]
							[Binop:Int]
								[Local from(1365):Int:Int]
								=
								[Binop:Int]
									[Local mid(1370):Int:Int]
									+
									[Const:Int] 1
							[Binop:Int]
								[Local len(1368):Int:Int]
								=
								[Binop:Int]
									[Binop:Int]
										[Local len(1368):Int:Int]
										-
										[Local half(1369):Int:Int]
									-
									[Const:Int] 1
						[Else:Int] [Binop:Int]
							[Local len(1368):Int:Int]
							=
							[Local half(1369):Int:Int]
			[Return:Dynamic] [Local from(1365):Int:Int]

	static function swap<T>[Function:(a : Array<swap.T>, i : Int, j : Int) -> Void]
		[Arg:Array<swap.T>] [Local a(1339):Array<swap.T>]
		[Arg:Int] [Local i(1340):Int]
		[Arg:Int] [Local j(1341):Int]
		[Block:swap.T]
			[Var tmp(1342):swap.T]
				[Array:swap.T]
					[Local a(1339):Array<swap.T>:Array<swap.T>]
					[Local i(1340):Int:Int]
			[Binop:swap.T]
				[Array:swap.T]
					[Local a(1339):Array<swap.T>:Array<swap.T>]
					[Local i(1340):Int:Int]
				=
				[Array:swap.T]
					[Local a(1339):Array<swap.T>:Array<swap.T>]
					[Local j(1341):Int:Int]
			[Binop:swap.T]
				[Array:swap.T]
					[Local a(1339):Array<swap.T>:Array<swap.T>]
					[Local j(1341):Int:Int]
				=
				[Local tmp(1342):swap.T:swap.T]
}