@:keep @:directlyUsed @:used
class haxe.Log {

	public static function formatOutput[Function:(v : Dynamic, infos : haxe.PosInfos) -> String]
		[Arg:Dynamic] [Local v(4100):Dynamic]
		[Arg:haxe.PosInfos] [Local infos(4101):haxe.PosInfos]
		[Block:Dynamic]
			[Var str(4102):String]
				[Call:String]
					[Field:(s : Dynamic) -> String]
						[TypeExpr Std:Class<Std>]
						[FStatic:(s : Dynamic) -> String]
							Std
							string:(s : Dynamic) -> String
					[Local v(4100):Dynamic:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local infos(4101):haxe.PosInfos:haxe.PosInfos]
						==
						[Const:haxe.PosInfos] null
				[Then:Dynamic] [Return:Dynamic] [Local str(4102):String:String]
			[Var pstr(4103):String]
				[Binop:String]
					[Binop:String]
						[Field:String]
							[Local infos(4101):haxe.PosInfos:haxe.PosInfos]
							[FAnon:String] fileName:String
						+
						[Const:String] ":"
					+
					[Field:Int]
						[Local infos(4101):haxe.PosInfos:haxe.PosInfos]
						[FAnon:Int] lineNumber:Int
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Field:Null<Array<Dynamic>>]
							[Local infos(4101):haxe.PosInfos:haxe.PosInfos]
							[FAnon:Null<Array<Dynamic>>] customParams:Null<Array<Dynamic>>
						!=
						[Const:Null<Array<Dynamic>>] null
				[Then:Void] [Block:Void]
					[Var _g(4105):Int] [Const:Int] 0
					[Var _g1(4106):Null<Array<Dynamic>>]
						[Field:Null<Array<Dynamic>>]
							[Local infos(4101):haxe.PosInfos:haxe.PosInfos]
							[FAnon:Null<Array<Dynamic>>] customParams:Null<Array<Dynamic>>
					[While:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local _g(4105):Int:Int]
								<
								[Field:Int]
									[Local _g1(4106):Null<Array<Dynamic>>:Null<Array<Dynamic>>]
									[FInstance:Int]
										Array<Dynamic>
										length:Int
						[Block:Dynamic]
							[Var v(4104):Dynamic]
								[Array:Dynamic]
									[Local _g1(4106):Null<Array<Dynamic>>:Null<Array<Dynamic>>]
									[Local _g(4105):Int:Int]
							[Unop:Int]
								++
								Prefix
								[Local _g(4105):Int:Int]
							[Binop:String]
								[Local str(4102):String:String]
								+=
								[Binop:String]
									[Const:String] ", "
									+
									[Call:String]
										[Field:(s : Dynamic) -> String]
											[TypeExpr Std:Class<Std>]
											[FStatic:(s : Dynamic) -> String]
												Std
												string:(s : Dynamic) -> String
										[Local v(4104):Dynamic:Dynamic]
			[Return:Dynamic]
				[Binop:String]
					[Binop:String]
						[Local pstr(4103):String:String]
						+
						[Const:String] ": "
					+
					[Local str(4102):String:String]

	public static dynamic function trace[Function:(v : Dynamic, ?infos : Null<haxe.PosInfos>) -> Void]
		[Arg:Dynamic] [Local v(4098):Dynamic]
		[Arg:Null<haxe.PosInfos>]
			[Local infos(4099):Null<haxe.PosInfos>]
			[Const:Null<haxe.PosInfos>] null
		[Block:Void]
			[Var str(4107):String]
				[Call:String]
					[Field:(v : Dynamic, infos : haxe.PosInfos) -> String]
						[TypeExpr haxe.Log:Class<haxe.Log>]
						[FStatic:(v : Dynamic, infos : haxe.PosInfos) -> String]
							haxe.Log
							formatOutput:(v : Dynamic, infos : haxe.PosInfos) -> String
					[Local v(4098):Dynamic:Dynamic]
					[Local infos(4099):Null<haxe.PosInfos>:Null<haxe.PosInfos>]
			[Call:Void]
				[Field:(v : Dynamic) -> Void]
					[TypeExpr Sys:Class<Sys>]
					[FStatic:(v : Dynamic) -> Void]
						Sys
						println:(v : Dynamic) -> Void
				[Local str(4107):String:String]
}